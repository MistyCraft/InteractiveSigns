plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.5'
}

group = 'me.vovari2'
version = '1.3.8'

repositories {
    mavenCentral()
    maven { url = "https://repo.papermc.io/repository/maven-public/"} // Paper
    maven { url = "https://maven.enginehub.org/repo/" } // WorldEdit, WorldGuard
    maven { url = "https://jitpack.io" } // GriefPrevention, Lands, ChestProtect
    maven { url = "https://repo.william278.net/releases" } // HuskClaims
    maven { url = "https://repo.bg-software.com/repository/api/" } // SuperiorSkyblock
    maven { url = "https://maven.playpro.com/"} // CoreProtect
//    maven { url = "https://maven.addstar.com.au/artifactory/all-releases/"} // Prism
    maven { url = "https://repo.glaremasters.me/repository/bloodshot"} // GriefDefender
    maven { url = "https://repo.extendedclip.com/releases/"} // PlaceholderAPI

}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT")
    implementation("dev.jorel:commandapi-bukkit-shade:10.0.1")
    compileOnly("com.sk89q.worldedit:worldedit-bukkit:7.3.0")
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.9-SNAPSHOT")
    compileOnly("com.github.GriefPrevention:GriefPrevention:16.18.2")
    compileOnly("net.william278.huskclaims:huskclaims-bukkit:1.5")
    compileOnly("com.bgsoftware:SuperiorSkyblockAPI:2024.4")
    compileOnly("net.coreprotect:coreprotect:22.0")
//    compileOnly("network.darkhelmet:Prism-Api:4.0.0-SNAPSHOT")
    compileOnly("com.github.angeschossen:LandsAPI:7.11.10")
    compileOnly("com.github.angeschossen:ChestProtectAPI:5.19.16")
    compileOnly files("./libs/Residence5.1.6.5.jar")
    compileOnly("com.griefdefender:api:2.1.0-SNAPSHOT")
    compileOnly("me.clip:placeholderapi:2.11.6")
    implementation("com.github.Vovari2:FoamLib:1.0.5")
}

shadowJar {
    relocate("dev.jorel.commandapi", "libs.commandapi")
    getDestinationDirectory().set(new File("D:\\Minecraft\\Servers\\Purpur 1.21.4\\plugins\\"))
    archiveFileName = "${project.name}-${project.version}.jar"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}